doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Berlin Web Audio Hack Day 2014

    // build:css styles/styles.css
    //- Check out 'src/bower_components/prism/themes/' for available themes
    link(rel='stylesheet', type='text/css', href='bower_components/prism/themes/prism-tomorrow.css')
    link(rel='stylesheet', type='text/css', href='styles/sole.css')
    // endbuild

  body

    article

      section(data-bespoke-state='title')
        h1 Berlin Web Audio Hack Day 2014
        h2 Soledad Penadés
        h3 @supersole


      section
        h3.bullet Why are we here?
        h2.bullet Because we want to make noise in the web
        h1.bullet ... without plug-ins!


      section
        h1 Oh, I know, with <tt>&lt;audio&gt;</tt>, eh?


      section
        h2 We <em>could</em> use it...
        tt.bullet &lt;audio src="awesomesong.ogg" controls preload&gt;&lt/audio&gt;
        h3.bullet This would...
        ul
          li initiate network request for loading
          li deal with decoding/streaming/buffering
          li render audio controls
          li display progress indicator, time...

      section
        h3.bullet It could also trigger some events!
        ul
          li loaded
        h3.bullet And has methods you can use
        ul
          li play

      section
        h2.bullet But it has shortcomings...
        ul
          li hard to accurately schedule
          li triggering multiple instances of same sound requires a hack
          li they're associated to a DOM element
          li output goes straight to the speakers - no fancy visualisations
          li in some systems the OS will display a fullscreen player overlay

      section
        h3.bullet Is it all over?
        h2.bullet Do we just give up and start writing native apps?
        h1.bullet NO


      section
        h2.bullet ... or maybe we could use Flash...?
        h1.bullet Get out of here.
        h3.bullet Have a nice day!


      section
        h1 Web Audio to the rescue!


      section
        h3.bullet Web Audio...
        ul
          li is modular
          li interoperable with other JS/Web APIs
          li not attached to the DOM
          li runs in a separate thread
          li 2014: supported in many browsers!

      section
        h2.bullet So how does it work?
        h1.bullet Let me tell you a story...


      section
        h1.bullet In the beginning there was the nothingness...

      
      section
        h2.bullet And we created an audio context
        code.language-javascript.bullet
          pre.
            var audioContext = new AudioContext();

      section
        h2.bullet The audio graph? <span class="bullet">ô_Ô</span>

      section
        h1 Show, don't tell


      section
        h2.bullet Let's make some noise
        code.language-javascript.bullet
          pre.
            //
            var audioContext = new AudioContext();
            var oscillator = audioContext.createOscillator();
            oscillator.connect(audioContext.destination);

      section
        h2.bullet Controlling the oscillator
        code.language-javascript.bullet
          pre.
            // start it now
            oscillator.start(0);

            // 3 seconds from now
            oscillator.start(audioContext.currentTime + 3)

            // stop it now
            oscillator.stop(0);
            
            // start it again
            oscillator.start(0); // But nothing happens!?
            

      section
        h3.bullet Why can't oscillators be restarted?
        h2.bullet Welcome to your first Web Audio...
        h1.bullet GOTCHA!


      section
        h2.bullet Because of performance reasons
        h3.bullet One-use only nodes
        ul.bullet
            li shoot and forget
            li automatically disposed of by the GC
            li as long as you don't keep references
            li watch out for those memory leaks!

      section
        h1 Write your own wrappers


      section
        h2.bullet Oscillator.js (1/2)
        code.language-javascript
          pre.
            function Oscillator(context) {
              var node = null;
              var nodeNeedsNulling = false;

              function ensureNodeIsLive() {
                if(nodeNeedsNulling || node === null) {
                  node = context.createOscillator();
                }
                nodeNeedsNulling = false;
              }

              // ... continued


      section
        h2.bullet Oscillator.js (2/2)
        code.language-javascript
          pre.
            // continues
              this.start = function(when) {
                ensureNodeIsLive();
                node.start(when);
              };

              this.stop = function(when) {
                if(node === null) {
                  return;
                }
                nodeNeedsNulling = true;
                node.stop(when);
              };
            }


      section
        h2.bullet Using it
        code.language-javascript
            pre.
              var ctx = new AudioContext();
              var osc = new Oscillator(ctx);

              function restart() {
                osc.stop(0);
                osc.start(0);
              }

              osc.start(0);

              setTimeout(restart, 1000);

      section
        h2 Self regenerating oscillator
        iframe(src='examples/regenerate_oscillator')


      section
        h2 Can we play something other than that beep?
        h3 Yes!


      section
        h3.bullet Nodes have properties we can change
        h2.bullet e.g. <tt>oscillator.type</tt>
        ul
          li sine
          li square
          li sawtooth
          li triangle
          li custom

        code.language-javascript.bullet
          pre.
            oscillator.type = 'square';


      section
        h3.bullet <tt>oscillator.frequency</tt>
        h2.bullet Naive attempt:
        code.language-javascript.bullet
          pre.
             oscillator.frequency = '880';

      section
        h3.bullet <tt>oscillator.frequency</tt> is an <tt>AudioParam</tt>
        h2.bullet It is <em>special</em>
        code.language-javascript.bullet
          pre.
            // Access it with
            oscillator.frequency.value = '880';


      section
        h2.bullet So what is the point of <tt>AudioParam</tt>?
        h1.bullet Superpowers.

      section
        h1.bullet Superpower #1
        h2.bullet Scheduling changes with accurate timing

      section
        h1.bullet What NOT to do
        ul
          li setInterval
          li setTimeout

      section
        h1 Stepped sounds
        iframe(src='examples/step_sounds')


      section
        h2.bullet <tt>AudioParam</tt> approach
        ul
          li <tt>setValueAtTime</tt>
          li <tt>linearRampToValueAtTime</tt>
          li <tt>exponentialRampToValueAtTime</tt>
          li <tt>setTargetAtTime</tt>
          li <tt>setValueCurveAtTime</tt>
        h3.bullet Web Audio keeps a list of timed events <strong>per parameter</strong>

      section
        h3.bullet Go from 440 to 880 Hz in 3 seconds
        code.language-javascript.bullet
          pre.
            osc.frequency.setValueAtTime(
              440,
              audioContext.currentTime
            );
            osc.frequency.linearRampToValueAtTime(
              880,
              audioContext.currentTime + 3
            );

      section
        h2.bullet Building envelopes
        h3.bullet Let's build an ADSR envelope
        img(src='./examples/_data/adsr.png', class='bullet')


      section
        h1.bullet ADSRs...?
        ul
          li Used a lot in substractive synthesis
          li Often for describing note volumes
          li Relatively easy to configure and compute


      section
        h2.bullet We need a new node for controlling the volume
        h1.bullet <tt>GainNode</tt>


        code.language-javascript.bullet
          pre.
            var ctx = new AudioContext();
            var osc = ctx.createOscillator();
            var gain = ctx.createGain(); // *** NEW

            osc.connect(gain); // *** NEW
            gain.connect(ctx.destination); // *** NEW


      section
        h2 ADSR part 1
        h3.bullet Attack/Decay/Sustain phase

        code.language-javascript.bullet
          pre.
            //
            gain.gain.setValueAtTime(
              0,
              audioContext.currentTime
            );
            gain.gain.linearRampToValueAtTime(
              1,
              audioContext.currentTime + attackLength
            );
            gain.gain.linearRampToValueAtTime(
              sustainValue,
              audioContext.currentTime + decayLength
            );

      section
        h2 ADSR part 2
        h3.bullet Release phase

        code.language-javascript.bullet
          pre.
            //
            gain.gain.linearRampToValueAtTime(
              0,
              audioContext.currentTime + releaseLength
            );


      section
        h1 Envelopes
        iframe(src='examples/envelopes')


      section
        h2 Cancelling events!

        code.language-javascript.bullet
          pre.
            //
            osc.frequency.cancelScheduledEvents(
              audioContext.currentTime
            );


      section
        h1.bullet Superpower #2
        h2.bullet Modulating properties
        h3.bullet Connect the output of one node to another node's property


      section
        h1 LFOs
        h2.bullet <em>Low Frequency Oscillators</em>
        img(src='./examples/_data/lfo.png', class='bullet')


      section
        h1 LFOs
        h2.bullet We can't hear those frequencies...
        h3.bullet but can use them to alter other values we <em>can</em> notice!

      section
        h1 SPOOKY SOUNDS


      section
        h2.bullet Watch out!

        code.language-javascript.bullet
          pre.
            //
            var context = new AudioContext();
            var osc = context.createOscillator();
            var lfOsc = context.createOscillator();

            var gain = context.createGain();
            lfOsc.connect(gain);
            
            // The output from gain is the [-1, 1] range
            gain.gain.value = 100;
            // now the output from gain is in the [-100, 100] range!
            
            gain.connect(osc.frequency); // NOT the destination


      section
        h2.bullet KEEP watching out

        code.language-javascript.bullet
          pre.
            //
            osc.frequency.value = 440;

            // oscillation frequency is 1Hz = once per second
            lfOsc.frequency.value = 1;
            
            osc.start();
            lfOsc.start();
                       
      section
        h1 spooky LFOs
        iframe(src='examples/spooky_lfos')


      section
        h1 pewpewmatic
        iframe(src='examples/pewpewmatic')


      section
        h1 media element
        iframe(src='examples/mediaelement')


      section
        h1 analyser
        iframe(src='examples/analyser')


      section(data-bespoke-state='title')
        h1 Thanks!
        h2 <a href="https://twitter.com/supersole">@supersole</a>
        h3 <a href="http://soledadpenades.com">soledadpenades.com</a>




      
    // build:js scripts/scripts.js
    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-keys/dist/bespoke-keys.min.js')
    script(src='bower_components/bespoke-touch/dist/bespoke-touch.min.js')
    script(src='bower_components/bespoke-bullets/dist/bespoke-bullets.min.js')
    script(src='bower_components/bespoke-scale/dist/bespoke-scale.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/bespoke-progress/dist/bespoke-progress.min.js')
    script(src='bower_components/bespoke-state/dist/bespoke-state.min.js')
    script(src='bower_components/bespoke-fullscreenbackground/dist/bespoke-fullscreenbackground.js')
    script(src='bower_components/bespoke-convenient/dist/bespoke-convenient.js')
    script(src='bower_components/bespoke-indexfinger/dist/bespoke-indexfinger.js')
    script(src='bower_components/bespoke-secondary/dist/bespoke-secondary.js')
    script(src='bower_components/prism/prism.js')
    script(src='scripts/main.js')
    // endbuild
